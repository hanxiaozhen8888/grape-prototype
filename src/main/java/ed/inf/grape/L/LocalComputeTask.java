package ed.inf.grape.L;

import java.util.ArrayList;
import java.util.List;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

import ed.inf.grape.core.Message;
import ed.inf.grape.core.Query;
import ed.inf.grape.core.Result;
import ed.inf.grape.graph.Partition;

public class LocalComputeTask {

	/** assign a partition to this task */
	private Query query;

	/** assign a partition to this task */
	private int partitionID;

	/** messages generated by this step */
	private List<Message> generatedMessages;

	/** results generated by this step */
	private List<Result> generatedResults;

	static Logger log = LogManager.getLogger(LocalComputeTask.class);

	public LocalComputeTask(Query query, int partitionID) {
		this.partitionID = partitionID;
		this.query = query;
		this.generatedMessages = new ArrayList<Message>();
		this.generatedResults = new ArrayList<Result>();
	}

	public int getPartitionID() {
		return this.partitionID;
	}

	public List<Message> getMessages() {
		/**
		 * return the messages generated by this local compute.
		 */
		return (this.generatedMessages.size() == 0) ? null
				: this.generatedMessages;
	}

	public List<Result> getResults() {
		/**
		 * return the results generated by this local compute.
		 */
		return (this.generatedResults.size() == 0) ? null
				: this.generatedResults;
	}

	public void compute(Partition partition) {
		/**
		 * a method need to implemented by client
		 * 
		 * define compute, also fulfil messages and results.
		 * 
		 */
		log.debug("local compute.");
	}

	public void incrementalCompute(Partition partition,
			List<Message> incomingMessages) {
		/**
		 * a method need to implemented by client
		 * 
		 * define compute, also fulfil messages and results.
		 * 
		 */
		log.debug("local incremental compute.");
	}
}
